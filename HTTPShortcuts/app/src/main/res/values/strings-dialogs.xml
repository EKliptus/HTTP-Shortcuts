<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="help_variables" translatable="false"><![CDATA[
        <p>
            <b>What are variables?</b><br>
            Variables allow you to inject pieces of information dynamically into your shortcuts when executing them. A variable consists of a key and a value which is resolved at execution time, based on its type. For some variable types this means that a prompt dialog is shown that asks for a value, others can be resolved without user input.
        </p>
        <p>
            <b>How do I use variables?</b><br>
            You can insert a placeholder for a variable into your shortcuts\' url, requests parameters, request body, authentication and header fields by clicking the \"{ }\" button next to the input field and selecting a variable.
        </p>
        <p>
            When executing a shortcut that contains variable placeholders all of them are resolved according to their type.
        </p>
        <p>
            You can also insert these placeholders into some of your variables, i.e., you can have variables reference other variables.
        </p>
        <p>
            <b>What are the different types of variables?</b><br>
            There are 10 different types of variables:</p>
        <p>
            <u>Constant</u><br>
            A <i>constant</i> stores a static value, until explicitly changed. There is no prompt dialog. It can be used to store a piece of information that is shared across multiple shortcut, such as an authentication token or a domain name. This way it can easily be changed.<br>
            It is also possible to change the value of a constant programmatically before or after a shortcut runs, e.g. to store parts of a HTTP response into it.
        </p>
        <p>
            <u>Toggle</u><br>
            The <i>toggle</i> type consists of a list of values. There is no prompt dialog. Every time it is used it resolves to the next value in the list. When the last value is reached it starts again from the first.
        </p>
        <p>
            <u>Selection</u><br>
            The <i>selection</i> type consists of a list of options, each of which has a value and a label. It triggers a dialog from which one of the options can be selected.
        </p>
        <p>
            <u>Text, Number and Password</u><br>
            The <i>text</i>, <i>number</i> and <i>password</i> types trigger a prompt dialog where a value can be entered into a text field.
        </p>
        <p>
            <u>Number Slider</u><br>
            The <i>number slider</i> type is similar to the <i>number</i>. It allows you to pick a number. However, the number is entered using a horizontal slider, for which you can define the minimum and maximum value, as well as the step size.
        </p>
        <p>
            <u>Date and Time</u><br>
            The <i>date</i> and <i>time</i> types trigger a prompt dialog where a date or time can be selected. The output format can be specified according to Android\'s <a href="https://developer.android.com/reference/java/text/SimpleDateFormat.html">SimpleDateFormat</a>.
        </p>
        <p>
            <u>Color</u><br>
            The <i>color</i> type triggers a prompt dialog where a color can be selected. Its value is returned in RGB hex format (e.g. ff0000 for red).
        </p>
        <p>
            <b>What does <i>Allow \'Share …\'</i> mean?</b><br><b>How can I share text into variables?</b><br>
            In the advanced settings section of a variable you can mark it as <i>Allow \'Share …\'</i>. This makes it possible to provide the value of this variable through Android\'s <i>Share</i>-dialog, e.g. by sharing a URL or text snippet from another app. The variable will then assume the shared value during execution.
        </p>
    ]]></string>
    <string name="privacy_policy" translatable="false"><![CDATA[
        <p>
            <b>General</b><br>
            All data entered into the app is only ever sent to the domains specified by the user through the use of shortcuts. No data about the user, their behavior or device is ever collected or sent to the developer or any other third-party as part of this app.<br><br>The only exception to this is crash reporting (see below).
        </p>
        <p><b>Crash Reporting</b><br>
            The app uses the third-party library Bugsnag to collect crash reports. This serves the purpose of discovering and fixing bugs in the app. The collected data contains basic information about the device and the type of crash. No personal information such as usernames, email addresses or IP addresses is collected.<br><br>The user has the option to opt-out of the sending of these crash reports.
        </p>
    ]]></string>
</resources>
